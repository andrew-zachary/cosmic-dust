---
import { getCollection } from "astro:content";

export async function getStaticPaths({ paginate }) {

    const cats = ['cat-1', 'cat-2', 'cat-3', 'cat-4', 'all'];

    const paginatedCats = cats.map( async (cat) => {

        if(cat === 'all') {

            const enPostsAll = await getCollection('posts', post => post.id.includes('en/'));

            return paginate( enPostsAll, { pageSize: 5, params: { cat }, props: { cats, currentCat: cat } });    

        }

        const enPostsByCat = await getCollection('posts', post => {

            return post.id.includes('en/') && (post.data.cat === cat);

        });

        return paginate( enPostsByCat, { pageSize: 5, params: { cat }, props: { cats, currentCat: cat } });

    });

    return await Promise.all(paginatedCats);

};

const { page, cats, currentCat } = Astro.props;
---
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>posts</title>
	</head>
	<body>
        <ul>
            {
                cats.map(cat => {
                    return <li>
                        <a href={ `/posts/${cat}/1` }>{ cat }</a>
                    </li>
                })
            }
        </ul>
        <ul>
            {
                page.data.map(post => {
                    return <li>
                        <a href={ `${post.slug}` }>{ post.data.title }</a>
                    </li>
                })
            }
        </ul>
        <ul>
            {
                Array( Math.ceil(page.total / 5) ).fill(undefined).map( (_, index) => {
                    return <li>
                        <a href={`/posts/${currentCat}/${index + 1}`}>{ index + 1 }</a>
                    </li>
                })
            }
        </ul>
    </body>
</html>